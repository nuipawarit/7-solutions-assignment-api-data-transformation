// @generated by protobuf-ts 2.9.1 with parameter server_grpc1
// @generated from protobuf file "api.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { EmployeeService } from "./api";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Employee } from "./api";
import type { Empty } from "./google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service EmployeeService
 */
export interface IEmployeeServiceClient {
    /**
     * @generated from protobuf rpc: GetEmployee(google.protobuf.Empty) returns (Employee);
     */
    getEmployee(input: Empty, options?: RpcOptions): UnaryCall<Empty, Employee>;
}
/**
 * @generated from protobuf service EmployeeService
 */
export class EmployeeServiceClient implements IEmployeeServiceClient, ServiceInfo {
    typeName = EmployeeService.typeName;
    methods = EmployeeService.methods;
    options = EmployeeService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetEmployee(google.protobuf.Empty) returns (Employee);
     */
    getEmployee(input: Empty, options?: RpcOptions): UnaryCall<Empty, Employee> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, Employee>("unary", this._transport, method, opt, input);
    }
}
